<?xml version="1.0"?>
<robot name="diff_drive_robot" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <!--
    Declare optional controller config path which points to parameters YAML. Default value
    of '' disables control 
    -->
    <xacro:arg name="controller_config_path" default=""/>
    <!--
    Declare optional hardware type ('real' or 'simulated') to signal which hardware interface
    should be used. Default value of '' disables control 
    -->
    <xacro:arg name="hardware_type" default=""/>
    <!-- Promote arguments to properties for use in expressions -->
    <xacro:property name="controller_config_path" value="$(arg controller_config_path)"/>
    <xacro:property name="hardware_type" value="$(arg hardware_type)"/>
    <!-- Validate hardware type value -->
    <xacro:if value="${hardware_type not in ['', 'real', 'simulated']}">
        <!--
        Use undefined macro to raise error during xacro processing and signal that hardware
        type is invalid -->
        <xacro:invalid_hardware_type/>
    </xacro:if>
    <!--
    Enable control and define relevant tags only if controller YAML path is non-empty and
    hardware type is both non-empty and valid -->
    <xacro:property
        name="use_control"
        value="${controller_config_path != '' and hardware_type in ['real', 'simulated']}"
    /> 
    
    <!-- Get physical constants and Gazebo physics tags -->
     <xacro:include filename="physics.xacro"/>

    <!-- Define base link, chassis, and caster -->
    <xacro:include filename="base.xacro"/>

    <!-- Get macro to define driven wheel links and their joints to the chassis -->
    <xacro:include filename="wheels.xacro"/>
    <xacro:driven_wheel prefix="left" use_control="${use_control}"/>
    <xacro:driven_wheel prefix="right" use_control="${use_control}"/>

    <!-- Define ros2_control tag and Gazebo control plugin if control is switched on -->
    <xacro:if value="${use_control}">
        <xacro:include filename="control.xacro"/>
    </xacro:if>    

</robot>